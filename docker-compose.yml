services:
  db:
    restart: always
    image: mysql:lts
    container_name: mlflow_db
    expose:
      - "3306"
    environment:
      - MYSQL_DATABASE=mlflow
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=dbmlflow
      - MYSQL_ROOT_PASSWORD=rootpass123
      - DB_HOST=db
    volumes:
      - mlflow_mysql_data:/var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      retries: 10

  mlflow:
    restart: always
    build: .
    image: mlflow_server
    container_name: mlflow_server
    env_file: "mlflow.env"
    ports:
      - "5000:5000"
    command: >
      mlflow server
      --dev
      --app-name basic-auth
      --host 0.0.0.0
      --artifacts-destination /mlartifacts
      --backend-store-uri mysql+pymysql://admin:dbmlflow@db:3306/mlflow
    volumes:
      - ./basic_auth.ini:/app/basic_auth.ini
      - ./auth_db:/auth_db
      - ./mlartifacts:/mlartifacts
    networks:
      - app_network
    
  ai_gateway:
    image: mlflow_server
    container_name: mlflow_ai_gateway
    ports:
      - "5100:5100"
    env_file: "llm_cred.env"
    volumes:
      - ./gateway_config.yml:/app/gateway_config.yml
    command: >
        /bin/sh -c "envsubst < /app/gateway_config.yml > /tmp/expanded_gateway_config.yml &&
              mlflow gateway start --config-path /tmp/expanded_gateway_config.yml --host 0.0.0.0 --port 5100"
    networks:
      - app_network

  middleware:
    restart: always
    build:
      context: ./middleware
    container_name: middleware_service
    ports:
      - "5300:5300"
    depends_on:
      - db
      - ai_gateway
    env_file:
      - mlflow.env
    networks:
      - app_network
    command: ["/wait-for-db.sh", "db", "uvicorn", "app:app", "--host", "0.0.0.0", "--port", "5300"]

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "5200:5200"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - middleware
    networks:
      - app_network

  admin_api:
    restart: always
    build:
      context: ./admin_api
    container_name: admin_api
    working_dir: /app
    env_file: mlflow.env
    ports:
      - "8001:8001"
    depends_on:
      - db
    command: uvicorn app:app --host 0.0.0.0 --port 8001
    volumes:
      - ./admin_api:/app
    networks:
      - app_network

  init_admin:
    build:
      context: ./admin_api
    container_name: init_admin
    working_dir: /app
    env_file: mlflow.env
    depends_on:
      - db
      - admin_api
    command: ["python", "init_admin.py"]
    volumes:
      - ./admin_api:/app
    networks:
      - app_network
    restart: "no"

  streamlit_admin:
    restart: always
    build:
      context: ./streamlit_admin
    container_name: streamlit_admin
    env_file: mlflow.env
    ports:
      - "8501:8501"
    depends_on:
      - admin_api
    networks:
      - app_network

#  quota_scheduler:
#    build:
#      context: ./scheduler
#    container_name: quota_scheduler
#    working_dir: /app
#    env_file: mlflow.env
#    depends_on:
#      - db
#    networks:
#      - app_network
#    command: ["/bin/bash","./wait-for-db.sh", "db", "--","python", "reset_quota.py"]
#    volumes:
#      - ./scheduler:/app
#    restart: "unless-stopped"

networks:
  app_network:
    driver: bridge

volumes:
  mlflow_mysql_data:

